package genconfig

configuration conf {
	@Runlevel(0) include embox.arch.system(core_freq=216000000)
	@Runlevel(0) include embox.arch.arm.cortexm3.bundle
	include platform.stm32.f7.stm32746g_discovery.bsp
	@Runlevel(0) include third_party.bsp.stmf7cube.sdram(fmc_swap=true)
	@Runlevel(0) include embox.driver.flash.stm32f7_qspi
	@Runlevel(0) include embox.arch.arm.armmlib.armv7m_cpu_cache(
		log_level=4,
		sram_nocache_section_size=0x4000,
		nocache_region0_addr=0x60000000, nocache_region0_size=0x00100000
	)
	include embox.arch.arm.vfork
	include embox.arch.arm.cxxabi

	@Runlevel(0) include embox.kernel.stack(stack_size=0x2000,alignment=4)

	@Runlevel(0) include embox.arch.arm.fpu.cortex_m7_fp
	@Runlevel(0) include embox.arch.arm.fpu.fpv5(log_level=3)

	@Runlevel(0) include embox.arch.arm.armmlib.interrupt
	@Runlevel(1) include embox.driver.interrupt.cortexm_nvic(irq_table_size=128)
	@Runlevel(1) include embox.driver.clock.cortexm_systick
	include embox.kernel.time.jiffies(cs_name="cortexm_systick")
	@Runlevel(1) include embox.driver.serial.stm_usart_f7(baud_rate=115200, usartx=1)
	@Runlevel(1) include embox.driver.diag(impl="embox__driver__serial__stm_usart_f7")
	@Runlevel(1) include embox.driver.serial.stm_ttyS1(baud_rate=115200, usartx=1)
	@Runlevel(1) include embox.driver.serial.stm_ttyS0(baud_rate=115200, usartx=1)

	include embox.kernel.task.multi
	include embox.kernel.task.resource.idesc_table(idesc_table_size=10)

	@Runlevel(2) include embox.driver.video.stm32f7_lcd(fb_base=0x60000000)

	include embox.driver.video.fb

	include embox.kernel.thread.thread_local_heap
	include embox.kernel.thread.thread_cancel_disable
	include embox.kernel.thread.signal_stub
	include embox.kernel.timer.sleep_nosched
	include embox.kernel.sched.sched
	include embox.kernel.sched.idle_light
	include embox.kernel.thread.signal_stub

	include embox.kernel.thread.core(thread_pool_size=2,thread_stack_size=0x3000)

	/* tty requires */
	include embox.kernel.thread.mutex
	include embox.driver.tty.tty(rx_buff_sz=16, io_buff_sz=16)
	include embox.driver.tty.task_breaking_disable

	include embox.init.setup_tty_diag

	@Runlevel(2) include embox.cmd.sh.tish(
				prompt="%u@%h:%w%$", rich_prompt_support=1,
				builtin_commands="")

	@Runlevel(3) include embox.init.start_script(shell_name="diag_shell")

	include embox.compat.posix.proc.vfork_exchanged
	include embox.compat.posix.proc.exec_exchanged

	include embox.util.hashtable
	include embox.util.log
	include embox.kernel.critical
	include embox.kernel.irq
	include embox.mem.pool_adapter

	include embox.util.LibUtil
	include embox.framework.LibFramework
	include embox.arch.arm.libarch
	include embox.compat.libc.stdio.print(support_floating=0)

	include embox.mem.heap_bm
	@Runlevel(1) include embox.mem.fixed_heap(heap_start=0x60100000, heap_size=0x400000)
	@Runlevel(1) include embox.mem.static_heap(heap_size=0x800)
	include embox.mem.bitmask(page_size=64)

	include embox.fs.driver.initfs_dvfs(section="")
	include embox.fs.driver.devfs_dvfs
	include embox.fs.rootfs_dvfs(fstype="initfs")

	include embox.driver.char_dev

	include embox.fs.dvfs.core(inode_pool_size=6, dentry_pool_size=6, inode_pool_size=6)
	include embox.compat.posix.fs.all_dvfs
	include embox.fs.syslib.perm_stub

	include embox.compat.posix.time.time

	@Runlevel(1) include embox.mem.loadsect
	@Runlevel (2) include embox.lib.cxx.ConstructionSingleApp
	include embox.lib.cxx.DestructionStatic(table_size=32)

	include third_party.lib.libgcc_toolchain
	include embox.compat.atomic.pseudo_atomic
	include embox.compat.libc.math_openlibm

	include embox.cmd.fs.ls

	include third_party.gcc.libstdcxx
	include third_party.gcc.libsupcxx

	include third_party.lib.opencv.all
	include platform.opencv.cmds.version
	include platform.opencv.cmds.edges
//	include platform.opencv.cmds.imagecapture
	include platform.opencv.data_samples.fruits_512x269_png
//	include platform.opencv.data_samples.sample_avi	
}
